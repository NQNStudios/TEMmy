* TEMmy

	TEMmy is an interactive electron microscope tutorial written using literate programming.
	
** Dependencies
	 
	 Most of the dependencies are included in this repository to keep their versions static.

	 You do need to install some of them separately: 

	 - Emacs (with the s string package installed), for compiling this file into a static website.
	 - Mono for running inklecate.exe

	 Parts of the build process are scripted in Bash, so building on Windows is not supported.

*** Inkjs

		Inkjs is a re-implementation of [[http:www.inklestudios.com/ink/][Ink]], a scripting language for making choice-based games. The important parts of TEMmy are written in Ink because it is a simple language, and anyone should be able to update TEMmy's Ink logic by following this guide: [[http:github.com/inkle/ink/blob/master/Documentation/WritingWithInk.md][Writing With Ink]].

		The Inkjs source code is governed by the MIT License, and its license file is included in the boilerplate directory.

*** Ink

		TEMmy is built using Inklecate, the official Ink compiler. Ink is governed by the MIT License, and its license file is included in the inklecate directory.


** Source code
*** HTML

		Inkjs can run on a static HTML website. The HTML for TEMmy lives in [[file+emacs:index.html][index.html]] (which is a modified version of an Inkjs template file).

*** JavaScript

		TEMmy uses some JavaScript functions to manipulate the DOM (for instance, to display images for the tutorial. These functions are defined in the following source block:

		#+begin_src js :tangle temmy.js
			var gStory = null;

			function beep(times=1) {
					var snd = new Audio("data:audio/wav;base64,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qJrx4KOQjahZxWbcZgztj2c49nKmkId44S71j0c8eV9yDK6uPRzx5X18eDvjvQ6yKo9ZSS6l//8elePK/Lf//IInrOF/FvDoADYAGBMGb7FtErm5MXMlmPAJQVgWta7Zx2go+8xJ0UiCb8LHHdftWyLJE0QIAIsI+UbXu67dZMjmgDGCGl1H+vpF4NSDckSIkk7Vd+sxEhBQMRU8j/12UIRhzSaUdQ+rQU5kGeFxm+hb1oh6pWWmv3uvmReDl0UnvtapVaIzo1jZbf/pD6ElLqSX+rUmOQNpJFa/r+sa4e/pBlAABoAAAAA3CUgShLdGIxsY7AUABPRrgCABdDuQ5GC7DqPQCgbbJUAoRSUj+NIEig0YfyWUho1VBBBA//uQZB4ABZx5zfMakeAAAAmwAAAAF5F3P0w9GtAAACfAAAAAwLhMDmAYWMgVEG1U0FIGCBgXBXAtfMH10000EEEEEECUBYln03TTTdNBDZopopYvrTTdNa325mImNg3TTPV9q3pmY0xoO6bv3r00y+IDGid/9aaaZTGMuj9mpu9Mpio1dXrr5HERTZSmqU36A3CumzN/9Robv/Xx4v9ijkSRSNLQhAWumap82WRSBUqXStV/YcS+XVLnSS+WLDroqArFkMEsAS+eWmrUzrO0oEmE40RlMZ5+ODIkAyKAGUwZ3mVKmcamcJnMW26MRPgUw6j+LkhyHGVGYjSUUKNpuJUQoOIAyDvEyG8S5yfK6dhZc0Tx1KI/gviKL6qvvFs1+bWtaz58uUNnryq6kt5RzOCkPWlVqVX2a/EEBUdU1KrXLf40GoiiFXK///qpoiDXrOgqDR38JB0bw7SoL+ZB9o1RCkQjQ2CBYZKd/+VJxZRRZlqSkKiws0WFxUyCwsKiMy7hUVFhIaCrNQsKkTIsLivwKKigsj8XYlwt/WKi2N4d//uQRCSAAjURNIHpMZBGYiaQPSYyAAABLAAAAAAAACWAAAAApUF/Mg+0aohSIRobBAsMlO//Kk4soosy1JSFRYWaLC4qZBYWFRGZdwqKiwkNBVmoWFSJkWFxX4FFRQWR+LsS4W/rFRb/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////VEFHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAU291bmRib3kuZGUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMjAwNGh0dHA6Ly93d3cuc291bmRib3kuZGUAAAAAAAAAACU=");  
					for (var i = 0; i < times; ++i) {
					setTimeout(function() { snd.play(); }, i * 500);
					}
			}

			function showImage(file) {
					var elem = document.createElement("img");
					elem.setAttribute("src", "images/" + file);
					document.getElementById("story").appendChild(elem);
			}


			function timer(time) {
			if (gStory.noTimers || gStory.delayingContinue) return;
					var timeParts = time.split(" ");
					var milli = 0;
					for (var idx = 0; idx < timeParts.length; idx += 2) {
							var amount = parseInt(timeParts[idx]);
							var unit = timeParts[idx+1];
							var milliPerUnit = 0;
							switch (unit[0]) {
							case "h": milliPerUnit = 3600000; break;
							case "m": milliPerUnit = 60000; break;
							case "s": milliPerUnit = 1000; break;
							}
							milli += amount * milliPerUnit;
					}
					gStory.delayingContinue = true;
					console.log(milli);
					setTimeout(function() {
					
					gStory.delayingContinue = false;
					gStory.noTimers = true;
					gStory.gContinueStory();
												beep(3);
					}, milli);
			}

			// This function will be called by main.js
			function setupStory(story) {
					gStory = story;
					gStory.noTimers = false;
					story.BindExternalFunction("showImage", showImage);
					story.BindExternalFunction("timer", timer);
					story.BindExternalFunction("beep", beep);
			}
		#+end_src
		
*** Ink

		The code blocks in this subtree contain *all* of TEMmy's internal logic for guiding a new electron microscope user. You should almost never have to edit anything outside this block.

**** Functions

		 #+begin_src ink :tangle temmy.ink
		 EXTERNAL showImage(file)
		 EXTERNAL timer(time)
		 EXTERNAL beep(times)
		 #+end_src

**** Variables

		 #+begin_src ink :tangle temmy.ink
	 
		 VAR current_density = 0

		 -> first_time_ever
		 
		 == tem1_setup
		 // Set TEM1-specific variables
		 ~ current_density = 250
		 
		 -> DONE

		 == tem2_setup
		 // Set TEM2-specific variables
		 ~ current_density = 65
		 
		 -> DONE
		 
		 #+end_src

**** Protocol

		 #+begin_src ink :tangle temmy.ink
		 == first_time_ever

		 ~ showImage("temmy.png")
		 Welcome to TEMmy, the Electron Microscope tutor named after Toby Fox's adorable character from Undertale.

		 /* // Uncomment this block to test the timer() function:
		 * Start
		 -


		 Waiting 5 seconds
		 ~ timer("5 s")
		 Waited, now
		 * click here
		 - waiting again (1 minute)
		 ~ timer("1 m")
		 Waited!
		 */
		 // This choice should only need to be made once, when TEMmy is opened on the computer corresponding to one of our two TEMs.
		 
		 First of all, which electron microscope are you using?

		 * TEM1
		 <- tem1_setup
		 * TEM2
		 <- tem2_setup
		 - Great.

		 -> first_time_today

		 == first_time_today

		 You need to warm up the filament in your scope. Make sure TEM Core is open.

		 Check HT Voltage.

		 * HT Voltage is off (red) or less than 80.
		   Someone is in the middle of increasing the HT Voltage, probably because they installed a new filament.
		   -> increase_ht_voltage ->
		 * HT Voltage is on (green) and at 80.
		 
		 - -> turn_on_filament
		 
		 

	 
		#+end_src

**** Subroutines

		 #+begin_src ink :tangle temmy.ink
		 
		 == increase_ht_voltage
		 // TODO
		 // -> DONE
		 -> kevin

		 == turn_on_filament
		 {tem2_setup: Use the physical control panel on the left to turn on BEAM BLANK. The button should light up.} 

		 Turn the filament on in TEM Core. The button should blink green for a while before becoming solid.
		 
		 Then it could take around 30 minutes to be warmed up.

		 * Time it for me
		 ~ timer("30 m")
		 * Skip that
		 
		 - Ok, should be good to go!

		 -> DONE

		 == kevin
		 Talk to Kevin.

		 #+end_src

** Build

	 To build TEMmy, simply execute the following function. It will create a directory called temmy which you can upload wherever you want to host TEMmy.

	 #+begin_src emacs-lisp
	 (defun temmy-build () (interactive)
	 (save-excursion
	 ;; Make sure there is no existing TEMmy build
		 (shell-command "if [ -d temmy ]; then rm -rf temmy; fi")
		 ;; Generate the Ink file
		 (org-babel-tangle)
		 ;; Compile the ink file
		 (shell-command "mono inklecate/inklecate.exe temmy.ink")

		 ;; Make the static site
		 (shell-command "cp -r boilerplate temmy")
		 (let ((storyjs
						(concat "var storyContent = "
										(with-temp-buffer (insert-file-contents "temmy.ink.json") (buffer-string))
										";")))
			 (save-excursion (find-file "temmy/story.js")
			 (erase-buffer)(insert storyjs)
											 (save-buffer)))
		 (copy-file "index.html" "temmy/")
		 (copy-directory "images" "temmy/")
		 (rename-file "temmy.js" "temmy/")

		 ;; Clean up
		 (shell-command "rm temmy.ink")
		 (shell-command "rm temmy.ink.json")
		 ;; Share with Windows partition
 		 (shell-command "sudo cp -r temmy /mnt/arch-share/")))

		 (bind-key* "C-t" 'temmy-build)
	 #+end_src

	 #+RESULTS:
	 : 0


	 
	 
	 
	 
	 

